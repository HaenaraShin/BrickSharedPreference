plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'com.github.dcendents.android-maven'
    id 'com.jfrog.bintray'
}

group = rootProject.ext.packageName
version = rootProject.ext.libVersionName

install {
    repositories.mavenInstaller {
        pom.project {
            name rootProject.ext.projectName
            description rootProject.ext.description
            url rootProject.ext.defaultUrl

            packaging 'aar'
            groupId rootProject.ext.packageName
            artifactId rootProject.ext.libraryName
            version rootProject.ext.libVersionName

            scm {
                connection rootProject.ext.defaultRepoUrl
                developerConnection rootProject.ext.defaultRepoUrl
                url rootProject.ext.defaultUrl
            }

            developers {
                developer {
                    id 'haenarashin'
                    name 'Haenara Shin'
                    email 'dev.heavybros@gmail.com'
                }
            }
        }
    }
}


bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty('bintrayUser')
    key = properties.getProperty('bintrayApiKey')

    configurations = ['archives'] // When uploading configuration files

    publish = true // aar 파일을 bintray에서 자동으로 배포

    pkg {
        repo = rootProject.ext.projectName
        name = rootProject.ext.libraryName
        userOrg = user
        desc = rootProject.ext.description
        licenses = ['MIT']

        vcsUrl = rootProject.ext.defaultRepoUrl
        websiteUrl = rootProject.ext.defaultUrl

        labels = ['aar', 'android']
        publicDownloadNumbers = true
        githubRepo = 'HaenaraShin/BrickSharedPreference'

        version {
            name = rootProject.ext.libVersionName
            desc = rootProject.ext.description
            released  = new Date()
            vcsTag = rootProject.ext.libVersionName
        }
    }
}


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName rootProject.ext.libVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.security:security-crypto:1.1.0-alpha03'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

task findConventions  {
    doLast {
        println project.getConvention()
    }
}
